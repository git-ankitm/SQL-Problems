Write a SQL query to find the IDs of the users who visited without making any transactions and the number of times they made these types of visits.

Return the result table sorted in any order.

The query result format is in the following example.

 
Example 1:

Input: 
Visits
+----------+-------------+
| visit_id | customer_id |
+----------+-------------+
| 1        | 23          |
| 2        | 9           |
| 4        | 30          |
| 5        | 54          |
| 6        | 96          |
| 7        | 54          |
| 8        | 54          |
+----------+-------------+
Transactions
+----------------+----------+--------+
| transaction_id | visit_id | amount |
+----------------+----------+--------+
| 2              | 5        | 310    |
| 3              | 5        | 300    |
| 9              | 5        | 200    |
| 12             | 1        | 910    |
| 13             | 2        | 970    |
+----------------+----------+--------+
Output: 
+-------------+----------------+
| customer_id | count_no_trans |
+-------------+----------------+
| 54          | 2              |
| 30          | 1              |
| 96          | 1              |
+-------------+----------------+
Question Explanation: 
Customer with id = 23 visited the mall once and made one transaction during the visit with transaction_id = 12.
Customer with id = 9 visited the mall once and made one transaction during the visit with transaction_id = 13.
Customer with id = 30 visited the mall once and did not make any transactions.
Customer with id = 54 visited the mall three times. During 2 visits they did not make any transactions, and during one visit they made 3 transactions.
Customer with id = 96 visited the mall once and did not make any transactions.
As we can see, users with IDs 30 and 96 visited the mall one time without making any transactions. Also, user 54 visited the mall twice and did not make any transactions.


Answer:
SELECT v.customer_id, COUNT(v.visit_id) AS count_no_trans
from Visits v 
LEFT JOIN Transactions t 
ON v.visit_id = t.visit_id
WHERE t.transaction_id IS NULL
GROUP BY v.customer_id;

Answer Explanation:
We perform a LEFT JOIN between the Visits and Transactions tables on the visit_id column to match visits with transactions.
We then filter for rows where the transaction_id is NULL, meaning that there was no transaction associated with that visit.
We group the remaining rows by customer_id and count the number of rows in each group using the COUNT(*) function.
Finally, we select the customer_id and the count of visits without transactions as count_no_trans.
